@model PagedList.IPagedList<A4.Models.Character>

    @using PagedList.Mvc;
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>

@*@model A4.ViewModel.CharacterIndexData*@
@{
    ViewBag.Title = "Marvel Characters";
}
@*<table class="table">

    <tr>
        <th>
            @Html.ActionLink("Character Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Release Date
        </th>
        <th>
            Comic Name
        </th>
        <th>
            @Html.ActionLink("Weight", "Index", new { sortOrder = ViewBag.WeightSortParm, currentFilter = ViewBag.CurrentFilter }) lbs
        </th>
        <th>
            @Html.ActionLink("Height", "Index", new { sortOrder = ViewBag.HeightSortParm, currentFilter = ViewBag.CurrentFilter }) inches
        </th>
        <th>
            Description
        </th>

        <th>
            Action
        </th>

    </tr>
    @foreach (var item in Model.Characters)
    {
        string selectedRow = ""; if (item.ID == ViewBag.ID) { selectedRow = "success"; }
        <tr class="@selectedRow">
            <td>
                @Html.DisplayFor(modelItem => item.CharacterName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ComicName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Height)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CharacterName })<br />
                @Html.ActionLink("Details", "Details", new { id = item.CharacterName })<br />
                @Html.ActionLink("Delete", "Delete", new { id = item.CharacterName })<br />
            </td>
        </tr>
    }
</table>

@if (Model.CharacterVersions != null)
{
    <h3>Courses Taught by Selected Instructor</h3>
            <table class="table">
                <tr>
                    <th></th>
                    <th>Number</th>
                    <th>Title</th>
                    <th>Department</th>
                </tr>
                @foreach (var item in Model.CharacterVersions)
                {
                    string selectedRow = "";
                    if (item.CharacterVersionID == ViewBag.CharacterVersionID)
                    {
                        selectedRow = "success";
                    }
                    <tr class="@selectedRow">
                        <td>
                            @Html.ActionLink("Select", "Index", new { characterVersionID = item.CharacterVersionID })
                        </td>
                        <td>
                            @item.CharacterVersionID
                        </td>
                        <td>
                            @item.CharacterName
                        </td>
                        <td>
                            @item.Version
                        </td>
                    </tr>
                }
            </table>
}*@


<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Character", FormMethod.Get))
{
    <p>
        Find by Comic: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">

    <tr>
        <th>
            @Html.ActionLink("Character Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Release Date
        </th>
        <th>
            Comic Name
        </th>
        <th>
            @Html.ActionLink("Weight", "Index", new { sortOrder = ViewBag.WeightSortParm, currentFilter = ViewBag.CurrentFilter }) lbs
        </th>
        <th>
            @Html.ActionLink("Height", "Index", new { sortOrder = ViewBag.HeightSortParm, currentFilter = ViewBag.CurrentFilter }) inches
        </th>
        <th>
            Description
        </th>

        <th>
            Action
        </th>

    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CharacterName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ComicName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Height)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CharacterName })<br />
                @Html.ActionLink("Details", "Details", new { id = item.CharacterName })<br />
                @Html.ActionLink("Delete", "Delete", new { id = item.CharacterName })<br />
            </td>
        </tr>
    }

</table>

@*@if (Model.CharacterVersions != null)
    {
        <h3>Version of Character</h3>
        <table class="table">
            <tr>
                <th></th>
                <th>Number</th>
                <th>Title</th>
                <th>Department</th>
            </tr>
            @foreach (var item in Model.CharacterVersion)
            {
                string selectedRow = "";
                if (item.CharacterID == ViewBag.ID)
                {
                    selectedRow = "success";
                }
                <tr class="@selectedRow">
                    <td>
                        @Html.ActionLink("Select", "Index", new { ID = item.CharacterID })
                    </td>
                    <td>
                        @item.CharacterVersionID
                    </td>
                    <td>
                        @item.CharacterName
                    </td>
                    <td>
                        @item.Version
                    </td>
                </tr>
            }
        </table>
    }*@

<br/>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))

